/********* APP CONTENT *********/
.app_content {
  /*TODO: This is still dependent on the parent having display: flex.*/
  flex: 1;

  display: flex;
  flex-direction: row;
}
.app_content:global(.column) {
  flex-direction: column;
}

/********* APP VIEWPORT *********/
.app_viewport {

  --color-viewport-back: var(--color-background);
  --color-viewport-back-detail: var(--color-background-lite);
  --color-viewport-outline: rgba(0, 0, 0, 0.03);
  --color-viewport-text: var(--color-background-text);
  --color-viewport-text-active: var(--color-background-active);
  --color-viewport-error: var(--color-error);

  flex: 1;

  /* think of the children */
  position: relative;
  width: 100%;

  background: var(--color-viewport-back);
  color: var(--color-viewport-text);
  outline: 1em dashed var(--color-viewport-outline);
  outline-offset: -2em;

  transition: outline-color 0.15s ease;
}
/********* APP DRAWER *********/
.app_drawer {
  --drawer-width: 300px;
  --drawer-tab-height: 32px;
  --drawer-handle-width: 4px;/* 12px on open */

  --color-drawer-back: var(--color-surface);
  --color-drawer-back-detail: var(--color-surface-dark);
  --color-drawer-text: var(--color-surface-text);
  --color-drawer-text-active: var(--color-surface-active);
  --color-drawer-text-disabled: var(--color-surface-dark);
  --color-drawer-text-alt: var(--color-surface-text-alt);
  --color-drawer-error: var(--color-error);

  --color-drawer-handle: var(--color-surface-dark);
  --color-drawer-handle-detail: var(--color-surface);
  --color-drawer-tab: var(--color-surface);
  --color-drawer-tab-text: var(--color-surface-text);
  --color-drawer-tab-text-active: var(--color-surface-active);
  --color-drawer-tab-highlight: var(--color-accent);
  --color-drawer-shadow: rgba(0, 0, 0, 0.5);

  --color-panel-back: var(--color-drawer-back);
  --color-panel-back-detail: var(--color-drawer-back-detail);
  --color-panel-back-input: var(--color-surface-lite);
  --color-panel-back-text: var(--color-drawer-text-alt);
  --color-panel-text: var(--color-drawer-text);
  --color-panel-text-active: var(--color-drawer-text-active);
  --color-panel-text-disabled: var(--color-drawer-text-disabled);
  --color-panel-error: var(--color-drawer-error);
  --color-panel-accent: var(--color-drawer-tab-highlight);

  position: relative;
  z-index: 500;
  width: var(--drawer-width);
  height: 100%;/* auto */
  display: flex;
  flex-direction: row;

  box-shadow: 0px 0px 5px var(--color-drawer-shadow);
  background: var(--color-drawer-back);
  color: var(--color-drawer-text);

  /* Drawer sliding */
  margin-left: calc(var(--drawer-handle-width) + var(--drawer-tab-height) - var(--drawer-width));
  left: calc(var(--drawer-width) - var(--drawer-tab-height) - var(--drawer-handle-width));
  transition:
    /* TODO: Although it looks nice, it is bad at transitions */
    /* margin-left 0.3s ease, */
    left 0.3s ease;
}
.app_drawer:global(.open) {
  /* Drawer sliding */
  margin-left: 0;
  left: 0;
}
/* for hide animation */
.app_drawer:global(.hide) {
  margin-left: calc(var(--drawer-width) * -1);
  left: calc(var(--drawer-width) + 5px);/*box shadow offset*/

  visibility: hidden;
  transition: left 0.3s ease,
    visibility 0s linear 0.3s;/* for hide animation */
}
.app_drawer:global(.drawer-side-bottom.hide) {
  margin-top: calc(var(--drawer-width) * -1);
  top: calc(var(--drawer-width) + 5px);/*box shadow offset*/

  visibility: hidden;
  transition: top 0.3s ease,
    visibility 0s linear 0.3s;/* for hide animation */
}

/********* DRAWER HANDLE *********/
.drawer_handle {
  width: var(--drawer-handle-width);
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;

  user-select: none;
  -moz-user-select: none;
  cursor: auto;

  color: var(--color-drawer-handle-detail);
  background: var(--color-drawer-handle);

  transition: width 0.1s ease 0.3s;
}
.drawer_handle > * {
  transform: rotateZ(0deg);

  /* Hide drawer handle when open */
  opacity: 0;
  transition: opacity 0.1s ease 0.3s;
}
.drawer_handle:global(.show) {
  /* Show drawer handle when open */
  --drawer-handle-width: 12px;
  cursor: col-resize;
}
.drawer_handle:global(.show) > * {
  /* Show drawer handle when open */
  opacity: 1;
}
.app_drawer:global(.drawer-side-bottom) .drawer_handle > * {
  transform: rotateZ(90deg);
}
/********* DRAWER CONTENT *********/
.drawer_content {
  width: calc(var(--drawer-width) - var(--drawer-handle-width));
  display: flex;
  flex-direction: column;

  /* NOTE: Remove this to make sure no content is outside of drawer */
  overflow: hidden;
}

/********* DRAWER CONTENT BAR *********/
.drawer_content_bar {
  width: 100%;
  min-width: var(--drawer-tab-height);
  min-height: var(--drawer-tab-height);
  display: flex;
  flex-direction: row;
  overflow-x: auto;
  overflow-y: hidden;

  background: var(--color-drawer-tab);

  /* remove scrollbar */
  -ms-overflow-style: none;

  /* for hiding content */
  outline: 10px dashed transparent;
  outline-offset: -20px;
}
/* remove scrollbar */
.drawer_content_bar::-webkit-scrollbar {
  display: none;
}
.drawer_content_bar > * {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;

  min-width: 5em;
  min-height: 0em;

  user-select: none;
  cursor: pointer;
}
.drawer_tab_expander {
  /*TODO: This doesn't do anything, probably because of how IconButton is styled.*/
  position: sticky;
  top: 0;
  left: 0;
  z-index: 501;
  background: var(--color-drawer-back);

  color: var(--color-drawer-text);
  transition: color 0.3s ease;

  /*NOTE: Whether drawer expander should be centered*/
  /*margin: auto auto;*/
  min-width: var(--drawer-tab-height)!important;
  max-width: var(--drawer-tab-height)!important;
  min-height: var(--drawer-tab-height)!important;
  max-height: var(--drawer-tab-height)!important;
  width: var(--drawer-tab-height);
  height: var(--drawer-tab-height);

  transform: rotateZ(90deg);
}
.drawer_tab_expander:hover {
  color: var(--color-drawer-text-active);
}
.drawer_tab_expander:disabled {
  color: var(--color-drawer-text-disabled);
}
.app_drawer:global(.open) .drawer_tab_expander {
  transform: rotateZ(-90deg);
}
.app_drawer:global(.drawer-side-bottom) .drawer_tab_expander {
  transform: rotateZ(180deg);
}
.app_drawer:global(.open.drawer-side-bottom) .drawer_tab_expander {
  transform: rotateZ(0deg);
}

.drawer_tab {
  visibility: visible;
  opacity: 1.0;
  padding-top: 4px;
  padding-left: 0px;
  white-space: nowrap;

  color: var(--color-drawer-tab-text);

  /* Hover animation */
  border-bottom: none;
  border-right: none;
  padding-right: 0px;
  transition: border-bottom 0.1s ease,
    padding-bottom 0.1s ease,
    border-right 0.1s ease,
    padding-right 0.1s ease,
    color 0.1s ease,
    opacity 0.1s ease, visibility 0s linear;/* for hiding content */
}
.drawer_tab > * {
  pointer-events: none;
}
.drawer_tab:hover {
  color: var(--color-drawer-tab-text-active);
}
.drawer_tab.disabled {
  opacity: 0.3;
}
.drawer_tab:global(.active):not(:global(.disabled)) {
  color: var(--color-drawer-tab-highlight);

  /* Hover animation */
  border-bottom: 4px solid currentColor;
  padding-bottom: 2px;
  border-right: none;
  padding-right: 0px;
}
/* for hiding content */
.app_drawer:global(.open.hide-content) .drawer_tab {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.1s ease, visibility 0s linear 0.1s
}
.app_drawer:global(.no-animation) .drawer_tab {
  transition: none!important;
}
.app_drawer:global(.open.hide-content) .drawer_content_bar {
  outline: 10px dashed var(--color-drawer-back-detail);
  transition: outline 0.1s ease 0.1s;
}
/* Sideways drawer tabs */
.app_drawer:global(.drawer-bar-sideways) .drawer_content {
  flex-direction: row;
}
.app_drawer:global(.drawer-bar-sideways) .drawer_content_bar {
  width: var(--drawer-tab-height);
  height: 100%;
  flex-direction: column;

  overflow-x: hidden;
  overflow-y: auto;
}
.app_drawer:global(.drawer-bar-sideways) .drawer_content_bar > * {
  min-width: 0em;
  min-height: 5em;
}
.app_drawer:global(.drawer-bar-sideways) .drawer_tab {
  padding-top: 0px;
  padding-left: 4px;
}
.app_drawer:global(.drawer-bar-sideways) .drawer_tab > * {
  flex-grow: 1;
  transform: rotateZ(-90deg);
}
.app_drawer:global(.drawer-bar-sideways) .drawer_tab:global(.active):not(:global(.disabled)) {
  /* Hover animation */
  border-bottom: none;
  padding-bottom: 0px;
  border-right: 4px solid currentColor;
  padding-right: 2px;
}

/********* DRAWER PANELS *********/
.drawer_content_panel_container {
  width: 100%;
  height: 100%;

  /* for hiding content */
  outline: 10px dashed transparent;
  outline-offset: -20px;
}
.drawer_content_panel {
  position: relative;
  width: calc(100% - var(--drawer-tab-height));
  height: 100%;

  /* for hiding content */
  visibility: visible;
  opacity: 1;
  transition: opacity 0.1s ease, visibility 0s linear;
}
.drawer_panel_container {
  visibility: visible;
}
.drawer_panel_container:global(.hide) {
  visibility: hidden;
}
.drawer_panel_container:global(.disabled) {
  opacity: 0.3;
  pointer-events: none;
}
.drawer_panel {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  overflow-y: auto;

  padding: 0 1em;
}
/* for hiding content */
.app_drawer:global(.hide-content) .drawer_content_panel_container {
  outline: 10px dashed var(--color-drawer-back-detail);
  transition: outline 0.1s ease 0.1s;
}
.app_drawer:global(.hide-content) .drawer_content_panel {
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.1s ease 0.1s, visibility 0s linear 0.2s;
}
.app_drawer:global(.no-animation) .drawer_content_panel {
  transition: none!important;
}

/********* BOTTOM DRAWER *********/
.app_drawer:global(.drawer-side-bottom) {
  width: 100%;
  height: var(--drawer-width);
  flex-direction: column;

  /* Drawer sliding */
  margin-top: calc(var(--drawer-handle-width) + var(--drawer-tab-height) - var(--drawer-width));
  top: calc(var(--drawer-width) - var(--drawer-tab-height) - var(--drawer-handle-width));
  transition:
    /* TODO: Although it looks nice, it is bad at transitions */
    /* margin-top 0.3s ease, */
    top 0.3s ease;
}
.app_drawer:global(.open.drawer-side-bottom) {
  /* Drawer sliding */
  margin-top: 0;
  top: 0;
}
.app_drawer:global(.drawer-side-bottom) .drawer_handle {
  height: var(--drawer-handle-width);
  width: 100%;

  transition: height 0.1s ease 0.3s;
}
.app_drawer:global(.drawer-side-bottom) .drawer_handle:global(.show) {
  /* Show drawer handle when open */
  cursor: row-resize;
}
.app_drawer:global(.drawer-side-bottom) .drawer_content {
  height: calc(var(--drawer-width) - var(--drawer-handle-width));
  width: 100%;/* auto */
}

/********* FULL DRAWER (OPENED) *********/
.app_drawer:global(.open):global(.full) {
  --drawer-width: 100vw!important;
}
.app_drawer:global(.open.drawer-side-bottom.full) {
  --drawer-width: 100vh!important;
}
